---

- name: Check free space on partition
  hosts: all
  become_user: root
  become: yes

  tasks:
    # original from https://stackoverflow.com/questions/26981907/using-ansible-to-manage-disk-space
    - name: Ensure that free space on the tested volume is greater than 40 Gb.
      assert:
        that:
          - mount.size_available > min_space_available
        fail_msg: "Disk space is not sufficient."
        success_msg: "Disk space is sufficient."
      vars:
        mount: "{{ ansible_mounts | selectattr('mount','equalto',item.mount) | list | first }}"
        min_space_available: 40000000000
      with_items:
      - "{{ ansible_mounts }}"

  # vars:
  #   min_space_available: 40
  # 
  # - name: check free min_space_available
  #   shell: |
  #     set -o pipefail
  #     available_space=$(df -h | grep \/dev\/vda | sort | awk "{print \$4}" | grep -o "[0-9.]\+" | tail -1)
  #     if [ "$available_space" -gt {{ min_space_available }} ]
  #     then
  #       echo "enough_space: true"
  #       echo "avaliable: $available_space Gb"
  #     else
  #       lack_of_space=$(({{ min_space_available }}-available_space))
  #       echo "enough_space: false"
  #       echo $lack_of_space
  #     fi
  #   args:
  #     executable: /bin/bash
  #   register: res1
  #   changed_when: '"enough_space: false" in res1.stdout_lines'
  # 
  # - name: Print space
  #   debug:
  #     msg: "{{ res1.stdout_lines[1] }}"